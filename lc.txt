================

import os

def get_file_list(path):
    file_list = []
    for root, dirs, files in os.walk(path):
        for file in files:
            file_list.append(os.path.join(root, file))
    return file_list

print(get_file_list(r'd:\3d'))
files=get_file_list(r'd:\3d')

================

import os
import shutil

def copy_files(src_path, dst_path, keyword):
    for root, dirs, files in os.walk(src_path):
        for file in files:
            if keyword in file:
                src_file = os.path.join(root, file)
                dst_file = os.path.join(dst_path, file)
                shutil.copy(src_file, dst_file)

copy_files(r'd:\3d', r'c:\1', 'Ear')

======按序列名称筛选FULL======

import os
import shutil
import pydicom

dicom_folder = r'C:\0'
keyword = 'cine_tf2d12_retro_iPAT-SAX'
dst_folder = r'C:\1'

if not os.path.exists(dst_folder):
    os.makedirs(dst_folder)

for root, dirs, files in os.walk(dicom_folder):
    for file in files:
        src_file = os.path.join(root, file)
        try:
            ds = pydicom.dcmread(src_file)
            is_dicom = True
        except:
            is_dicom = False
#
        if is_dicom and ds.SeriesDescription == keyword:
            relative_path = os.path.relpath(src_file, dicom_folder)
            dst_path = os.path.join(dst_folder, relative_path)
            dst_dir = os.path.dirname(dst_path)
            if not os.path.exists(dst_dir):
                os.makedirs(dst_dir)
#
            dst_file = dst_path.rsplit('.', 1)[0] + '.dcm'
            shutil.copy2(src_file, dst_file)


======按序列名称筛选======

import os
import shutil
import pydicom

dicom_folder = r'C:\0'
specific_character = 'cine_tf2d12_retro_iPAT-SAX'
new_folder = r'C:\1'

file_list = []
for root, dirs, files in os.walk(dicom_folder):
    for file in files:
        file_list.append(os.path.join(root, file))

for file in file_list:
    #if file.endswith('.IMA'):
        ds = pydicom.dcmread(file)
        if specific_character in ds.SeriesDescription:
            shutil.copy(file, new_folder)


======序列组合======

import os
import pydicom

dicom_folder = r'C:\1'
new_folder = r'C:\2'

files=os.listdir(dicom_folder)
siuid=pydicom.uid.generate_uid()

for filename in files:
    ds=pydicom.dcmread(os.path.join(dicom_folder, filename))
    ds.SeriesInstanceUID=siuid
    ds.SeriesNumber=100
    ds.save_as(os.path.join(new_folder, filename))


======序列重组======

import os
import pydicom

dicom_folder = r'C:\1'
new_folder = r'C:\2'

files=os.listdir(dicom_folder)
number_list=[pydicom.dcmread(os.path.join(dicom_folder, filename)).InstanceNumber for filename in files]
group=max(number_list)
uid_list = [pydicom.uid.generate_uid() for _ in range(group)]

for filename,n in zip(files,range(len(files))):
    ds = pydicom.dcmread(os.path.join(dicom_folder, filename))
    ds.SeriesInstanceUID=uid_list[n%group]
    ds.SeriesNumber=n%group
    ds.save_as(os.path.join(new_folder, filename))


======精简add======

import os
import pydicom

dicom_folder = r'C:\2'
new_folder = r'C:\3'

for root, dirs, files in os.walk(dicom_folder):
    for file in files:
       ds0 = pydicom.dcmread(os.path.join(root, file),force=True)
       ds = pydicom.Dataset()
       #ds.is_little_endian = True
       #ds.is_implicit_VR = False
       ds.file_meta=ds0.file_meta
       ds.PatientName = ds0.PatientName
       ds.PatientID = ds0.PatientID
       for elem in ds0:
           if elem.tag.group  in [0x0008,0x0020,0x0028]:
               ds.add(elem)
       ds.PixelData = ds0.PixelData
       ds.save_as(os.path.join(new_folder, file),write_like_original=False)


======精简======

import os
import pydicom

dicom_folder = r'C:\2'
new_folder = r'C:\3'

for root, dirs, files in os.walk(dicom_folder):
    for file in files:
       ds = pydicom.dcmread(os.path.join(root, file))
       for elem in ds:
           if elem.tag.group not in [0x0008,0x0020,0x0028] and elem.tag not in [0x00100010,0x00100020,0x7FE00010]:
               del ds[elem.tag]
       ds.save_as(os.path.join(new_folder, file))


==============

import os
import pydicom

dicom_folder = r'C:\0'
new_folder = r'C:\1'

for root, dirs, files in os.walk(dicom_folder):
    for file in files:
       ds = pydicom.dcmread(os.path.join(root, file),force=True)
       for elem in ds:
           if elem.tag.group in [0x0010,0x0018,0x0040]:
               del ds[elem.tag]
       ds.save_as(os.path.join(new_folder, file))


==============

import os
import pydicom

dicom_folder = r'C:\0'
new_folder = r'C:\1'

for root, dirs, files in os.walk(dicom_folder):
    for file in files:
       ds = pydicom.dcmread(os.path.join(root, file),force=True)
       for tag in list(ds.keys()):
           if tag.group in [0x0010,0x0018,0x0040]:
               del ds[tag]
       ds.save_as(os.path.join(new_folder, file))


=======diff=======

import pydicom
import csv

ds1 = pydicom.dcmread(r'C:\0\image1.dcm')  
ds2 = pydicom.dcmread(r'C:\0\image2.dcm')
output = r'C:\0\diff.csv'
diff = {}

def d(ds1,ds2):
  tags1 = [elem.tag for elem in ds1 if elem.tag != (0x7fe0, 0x0010)]
  tags2 = [elem.tag for elem in ds2 if elem.tag != (0x7fe0, 0x0010)]
  all_tags = tags1 + tags2
  for tag in all_tags:
      if tag not in tags1:
        diff[tag] = [ds2[tag].keyword,'', ds2[tag].value] 
      elif tag not in tags2:
        diff[tag] = [ds1[tag].keyword,ds1[tag].value, '']
      elif ds1[tag].value != ds2[tag].value:
          diff[tag] = [ds1[tag].keyword,ds1[tag].value, ds2[tag].value]

d(ds1.file_meta,ds2.file_meta)
d(ds1,ds2)

with open(output,'w') as f:
  writer = csv.writer(f)
  writer.writerow(['Tag', 'keyword','Value1', 'Value2'])
  for tag, values in diff.items():
    writer.writerow([tag, values[0], values[1], values[2]])

print('Diff comparison saved.')

